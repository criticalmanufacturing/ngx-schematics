import 'reflect-metadata';
import { Converter } from '@criticalmanufacturing/connect-iot-controller-engine';
import EngineTestSuite from '@criticalmanufacturing/connect-iot-controller-engine/test';
import { <%= classify(name) %>Converter } from '../../../../src/lib/converters/<%= dasherize(name) %>/<%= dasherize(name) %>.converter';

describe('<%= nameify(name) %> converter', () => {
    let converter: Converter.ConverterContainer;

    beforeEach(async () => {
        converter = await EngineTestSuite.createConverter({
            class: <%= classify(name) %>Converter
        });
    });

    it('should convert', async (done) => {
        /* Example int to string
        let result: string = await converter.execute(123, {
            parameter: 'something'
        });
        chai.expect(result).to.equal('123');
        */
        done();
    });
});